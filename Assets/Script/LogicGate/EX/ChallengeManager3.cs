using UnityEngine;
using UnityEngine.UI;
using System.Collections.Generic;

public class ChallengeManager3 : MonoBehaviour
{
    [Header("‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ")]
    public Clock clock; // ‡∏ï‡∏±‡∏ß Clock ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö
    public SevenSegmentDisplay sevenSegmentDisplay; // 7-Segment Display ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•

    [Header("‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•")]
    public List<int> targetNumbers = new List<int>(); // ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà 7-Segment ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•

    [Header("UI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞")]
    public Text targetNumbersText; // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å
    public Text scoreText; // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå

    private int score = 0; // ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
    private HashSet<int> achievedNumbers = new HashSet<int>(); // ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏•‡πâ‡∏ß

    void Start()
    {
        UpdateUI();
    }

    void Update()
    {
        if (CheckClockUsage()) // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Clock ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        {
            CheckChallengeCompletion();
        }
    }

    void UpdateUI()
    {
        if (targetNumbersText != null)
        {
            targetNumbersText.text = $"Target Numbers: {string.Join(", ", targetNumbers)}";
        }
        if (scoreText != null)
        {
            scoreText.text = $"Score: {score}"; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ö‡∏ô UI
        }

        Debug.Log($"üìå ‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á: {string.Join(", ", targetNumbers)}");
    }

    bool CheckClockUsage()
    {
        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Clock ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
        if (clock == null || clock.output == null || !clock.output.IsConnected())
        {
            Debug.Log("‚ùå Clock ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!");
            return false;
        }
        Debug.Log("‚úÖ Clock ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ß‡∏á‡∏à‡∏£");
        return true;
    }

    void CheckChallengeCompletion()
    {
        if (sevenSegmentDisplay != null)
        {
            bool isOutputCorrect = CheckSevenSegmentOutput(); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á
            score = CalculateScore(isOutputCorrect);
            UpdateUI(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå

            Debug.Log(isOutputCorrect
                ? $"‚úÖ ‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {score}"
                : $"‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {score}");
        }
    }

    bool CheckSevenSegmentOutput()
    {
        if (sevenSegmentDisplay == null) return false;

        int displayedValue = sevenSegmentDisplay.GetCurrentValue(); // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà 7-Segment ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        achievedNumbers.Add(displayedValue); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏™‡∏î‡∏á

        Debug.Log($"üîç ‡∏Ñ‡πà‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ö‡∏ô 7-Segment: {displayedValue} | ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: {string.Join(", ", targetNumbers)}");
        Debug.Log($"üìä ‡∏Ñ‡πà‡∏≤‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏•‡πâ‡∏ß: {string.Join(", ", achievedNumbers)}");

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô targetNumbers ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        return achievedNumbers.SetEquals(targetNumbers);
    }

    int CalculateScore(bool isOutputCorrect)
    {
        int newScore = 0;

        if (isOutputCorrect)
        {
            newScore += 50; // ‡∏ñ‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ 50 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        }
        else
        {
            newScore -= 10; // ‡∏ñ‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏¥‡∏î ‡∏´‡∏±‡∏Å 10 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        }

        Debug.Log($"üíØ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: {newScore}");
        return Mathf.Max(0, newScore);
    }
}
